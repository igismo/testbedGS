namespace eval TBCOMPAT {
# Event Object Types
set objtypes(TBCONTROL) 0
set objtypes(LINK) 1
set objtypes(TRAFGEN) 2
set objtypes(TIME) 3
set objtypes(PROGRAM) 4
set objtypes(FRISBEE) 5
set objtypes(SIMULATOR) 6
set objtypes(LINKTEST) 7
set objtypes(NSE) 8
set objtypes(SLOTHD) 9
set objtypes(NODE) 10
set objtypes(SEQUENCE) 11
set objtypes(TIMELINE) 12
set objtypes(CONSOLE) 13
set objtypes(TOPOGRAPHY) 14
set objtypes(LINKTRACE) 15
set objtypes(EVPROXY) 16
set objtypes(BGMON) 17

# Event Event Types
set eventtypes(REBOOT) 0
set eventtypes(START) 1
set eventtypes(STOP) 2
set eventtypes(UP) 3
set eventtypes(DOWN) 4
set eventtypes(UPDATE) 5
set eventtypes(MODIFY) 6
set eventtypes(SET) 7
set eventtypes(TIME) 8
set eventtypes(RESET) 9
set eventtypes(KILL) 10
set eventtypes(HALT) 11
set eventtypes(SWAPOUT) 12
set eventtypes(NSEEVENT) 13
set eventtypes(REPORT) 14
set eventtypes(ALERT) 15
set eventtypes(SETDEST) 16
set eventtypes(COMPLETE) 17
set eventtypes(MESSAGE) 18
set eventtypes(LOG) 19
set eventtypes(RUN) 20
set eventtypes(SNAPSHOT) 21
set eventtypes(RELOAD) 22
set eventtypes(CLEAR) 23
set eventtypes(CREATE) 24
set eventtypes(STOPRUN) 25

# Node Types and Classes
set hwtypes(APC) 1
set hwtype_class(APC) power
set isremote(APC) 0
set isvirt(APC) 0
set issubnode(APC) 0
set hwtypes(power) 1
set isremote(power) 0
set isvirt(power) 0
set issubnode(power) 0
set hwtypes(cisco2940) 1
set hwtype_class(cisco2940) switch
set isremote(cisco2940) 0
set isvirt(cisco2940) 0
set issubnode(cisco2940) 0
set hwtypes(switch) 1
set isremote(switch) 0
set isvirt(switch) 0
set issubnode(switch) 0
set hwtypes(cisco2940-ios) 1
set hwtype_class(cisco2940-ios) switch
set isremote(cisco2940-ios) 0
set isvirt(cisco2940-ios) 0
set issubnode(cisco2940-ios) 0
set hwtypes(switch) 1
set isremote(switch) 0
set isvirt(switch) 0
set issubnode(switch) 0
set hwtypes(cisco2960) 1
set hwtype_class(cisco2960) switch
set isremote(cisco2960) 0
set isvirt(cisco2960) 0
set issubnode(cisco2960) 0
set hwtypes(switch) 1
set isremote(switch) 0
set isvirt(switch) 0
set issubnode(switch) 0
set hwtypes(cisco3560-ios) 1
set hwtype_class(cisco3560-ios) switch
set isremote(cisco3560-ios) 0
set isvirt(cisco3560-ios) 0
set issubnode(cisco3560-ios) 0
set hwtypes(switch) 1
set isremote(switch) 0
set isvirt(switch) 0
set issubnode(switch) 0
set hwtypes(DL160) 1
set hwtype_class(DL160) pc
set isremote(DL160) 0
set isvirt(DL160) 0
set issubnode(DL160) 0
set hwtypes(pc) 1
set isremote(pc) 0
set isvirt(pc) 0
set issubnode(pc) 0
set default_osids(DL160) "Ubuntu1404-64-STD"
set hwtypes(gluster) 1
set hwtype_class(gluster) pc
set isremote(gluster) 0
set isvirt(gluster) 0
set issubnode(gluster) 0
set hwtypes(pc) 1
set isremote(pc) 0
set isvirt(pc) 0
set issubnode(pc) 0
set default_osids(gluster) "Ubuntu1604-STD"
set hwtypes(hp2810) 1
set hwtype_class(hp2810) switch
set isremote(hp2810) 0
set isvirt(hp2810) 0
set issubnode(hp2810) 0
set hwtypes(switch) 1
set isremote(switch) 0
set isvirt(switch) 0
set issubnode(switch) 0
set hwtypes(hp5412) 1
set hwtype_class(hp5412) switch
set isremote(hp5412) 0
set isvirt(hp5412) 0
set issubnode(hp5412) 0
set hwtypes(switch) 1
set isremote(switch) 0
set isvirt(switch) 0
set issubnode(switch) 0
set hwtypes(IPMI) 1
set hwtype_class(IPMI) power
set isremote(IPMI) 0
set isvirt(IPMI) 0
set issubnode(IPMI) 0
set hwtypes(power) 1
set isremote(power) 0
set isvirt(power) 0
set issubnode(power) 0
set hwtypes(miniPC) 1
set hwtype_class(miniPC) pc
set isremote(miniPC) 0
set isvirt(miniPC) 0
set issubnode(miniPC) 0
set hwtypes(pc) 1
set isremote(pc) 0
set isvirt(pc) 0
set issubnode(pc) 0
set default_osids(miniPC) "Ubuntu1604-STD"
set hwtypes(nortel5510) 1
set hwtype_class(nortel5510) switch
set isremote(nortel5510) 0
set isvirt(nortel5510) 0
set issubnode(nortel5510) 0
set hwtypes(switch) 1
set isremote(switch) 0
set isvirt(switch) 0
set issubnode(switch) 0
set hwtypes(pcvm) 1
set hwtype_class(pcvm) pcvm
set isremote(pcvm) 0
set isvirt(pcvm) 1
set issubnode(pcvm) 0
set hwtypes(pcvm) 1
set isremote(pcvm) 0
set isvirt(pcvm) 1
set issubnode(pcvm) 0
set hwtypes(pcvwa) 1
set hwtype_class(pcvwa) pcvwa
set isremote(pcvwa) 1
set isvirt(pcvwa) 1
set issubnode(pcvwa) 0
set hwtypes(pcvwa) 1
set isremote(pcvwa) 1
set isvirt(pcvwa) 1
set issubnode(pcvwa) 0

# Node Aux Types
set hwtypes(DL160-vm) 1
set isremote(DL160-vm) 0
set isvirt(DL160-vm) 1
set issubnode(DL160-vm) 0
set hwtypes(miniPC-vm) 1
set isremote(miniPC-vm) 0
set isvirt(miniPC-vm) 1
set issubnode(miniPC-vm) 0
set hwtypes(gluster-vm) 1
set isremote(gluster-vm) 0
set isvirt(gluster-vm) 1
set issubnode(gluster-vm) 0

# Global Vtypes

# Node Permissions

# Robot areas

# Obstacles

# Cameras

# OSIDs
set osids(linux-mfs) 1
set osids(CentOS6-64-STD) 1
set osids(FBSD-STD) 1
set osids(FBSD9-64-STD) 1
set osids(FREEBSD-MFS) 1
set osids(FRISBEE-MFS) 1
set osids(NEWNODE-MFS) 1
set osids(RHL-STD) 1
set osids(Ubuntu1004-STD) 1
set osids(Ubuntu1204-64-Click) 1
set osids(Ubuntu1204-64-STD) 1
set osids(Ubuntu1604-STD) 1
set osids(Ubuntu1404-32-STD) 1
set osids(Ubuntu1404-64-STD) 1
set osids(UB1404-64-STD-openvz) 1
set osids(Win7PRO-amd64-DL160) 1

# subOSIDs and parent OSIDs (default parent first element)

# Reserved Nodes
# Physical Node Names
set physnodes(pc1) "DL160"
set physnodes(pc2) "DL160"
set physnodes(pc17) "miniPC"
set physnodes(pc3) "DL160"
set physnodes(pc18) "miniPC"
set physnodes(pc4) "DL160"
set physnodes(pc5) "DL160"
set physnodes(pc6) "DL160"
set physnodes(pc7) "DL160"
set physnodes(pc8) "DL160"
set physnodes(pc9) "DL160"
set physnodes(pc19) "miniPC"
# Location info
set elabinelab_maxpcs 0

# Template goo
set ::DATASTORE "/proj"


}
set ns [new Simulator]
source tb_compat.tcl
set nodeA [$ns node]
set nodeB [$ns node]
set nodeC [$ns node]

tb-set-node-os $nodeA Win7PRO-amd64-DL160
tb-set-node-os $nodeB Win7PRO-amd64-DL160
tb-set-node-os $nodeC Ubuntu1404-64-STD

##set link0 [$ns duplex-link $nodeB $nodeA 1Gb 0ms DropTail]
set lan0 [$ns make-lan "$nodeA $nodeB $nodeC" 1000Mb 0ms]

###tb-fix-node $nodeA pc9
$ns rtproto Static
$ns run









